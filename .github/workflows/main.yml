name: CI

on: [push]

jobs:
  build-editor-linux:
    runs-on: ubuntu-16.04
    steps:
    - uses: actions/checkout@v2
    - run: scripts/build-linux.sh
    - name: Upload Linux editor binary
      uses: actions/upload-artifact@v1
      with:
        name: godot-linux-binary
        path: bin/godot.x11.opt.tools.64

  build-editor-windows-cross:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: scripts/build-windows-cross.sh
    - name: Upload windows exe
      uses: actions/upload-artifact@v1
      with:
        name: godot-windows-binary
        path: bin/godot.windows.opt.tools.64.exe

  build-editor-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - run: scripts/build-macos.sh
    - name: Upload macOS binary
      uses: actions/upload-artifact@v1
      with:
        name: godot-macos-binary
        path: bin/godot.osx.opt.tools.64

  build-switch:
    runs-on: ubuntu-latest
    container: devkitpro/devkita64

    steps:
    - uses: actions/checkout@v2
    - run: bash -c 'scripts/build-switch.sh'
    - name: Upload Switch nro
      uses: actions/upload-artifact@v1
      with:
        name: godot-switch-binary
        path: bin/switch_release_debug.nro

  build-release-windows:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build-editor-windows-cross]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: switchbrew/switch-tools
          path: switch-tools
      - uses: actions/download-artifact@v2
        with:
          name: godot-windows-binary
      - run: scripts/build-release-windows.sh
      - name: Upload Windows tools
        uses: actions/upload-artifact@v1
        with:
          name: godot-windows-archive
          path: godot-windows.zip

  build-release-macos:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build-editor-macos]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: switchbrew/switch-tools
          path: switch-tools
      - uses: actions/download-artifact@v2
        with:
          name: godot-macos-binary
      - run: scripts/build-release-macos.sh
      - uses: actions/upload-artifact@v1
        with:
          name: godot-macos-archive
          path: godot-macos-x86_64.dmg

  build-release-linux:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build-editor-linux]

    runs-on: ubuntu-16.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: switchbrew/switch-tools
          path: switch-tools
      - uses: actions/download-artifact@v2
        with:
          name: godot-linux-binary
      - run: scripts/build-release-linux.sh
      - uses: actions/upload-artifact@v1
        with:
          name: godot-linux-archive
          path: godot-linux.tar.gz 

  create-release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [build-release-windows, build-release-macos, build-release-linux, build-switch]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: godot-windows-archive
      - uses: actions/download-artifact@v2
        with:
          name: godot-macos-archive
      - uses: actions/download-artifact@v2
        with:
          name: godot-linux-archive
      - uses: actions/download-artifact@v2
        with:
          name: godot-switch-binary

      - id: get_version
        name: Get the version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
        shell: bash

      - run: scripts/create-template.sh ${{ steps.get_version.outputs.VERSION }}

      - uses: dsaltares/fetch-gh-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          repo: "Stary2001/godot-forwarder"
          version: "latest"
          file: "godot-forwarder.nro"
      
      - run: scripts/create-switch-release.sh ${{ steps.get_version.outputs.VERSION }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          body: |
            Release created by CI for ${{ steps.get_version.outputs.VERSION }}
          draft: true
          prerelease: false
      
      - name: Upload Windows editor
        id: upload-windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./godot-windows.zip
          asset_name: godot-${{ steps.get_version.outputs.VERSION }}-windows.zip
          asset_content_type: application/zip
      
      - name: Upload macOS editor
        id: upload-macos
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./godot-macos-x86_64.dmg
          asset_name: godot-${{ steps.get_version.outputs.VERSION }}-macos-x86_64.dmg
          asset_content_type: application/octet-stream
      
      - name: Upload Linux editor
        id: upload-linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./godot-${{ steps.get_version.outputs.VERSION }}-linux.tar.gz
          asset_name: godot-linux.tar.gz
          asset_content_type: application/zip
      
      - name: Upload Switch template
        id: upload-switch-template
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./godot_templates_switch_only.tpz
          asset_name: godot-templates-${{ steps.get_version.outputs.VERSION }}-switch-only.tpz
          asset_content_type: application/zip
      
      - name: Upload Switch release
        id: upload-switch-release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./godot-switch.zip
          asset_name: godot-${{ steps.get_version.outputs.VERSION }}-switch.zip
          asset_content_type: application/zip
