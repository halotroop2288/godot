name: CI

on: [push]

jobs:
  build-editor-linux:
    runs-on: ubuntu-16.04
    steps:
    - uses: actions/checkout@v2
    - run: scripts/build-linux.sh
    - name: Upload Linux editor binary
      uses: actions/upload-artifact@v1
      with:
        name: godot-linux
        path: bin/godot.x11.opt.tools.64
    - name: Upload Linux AppImage
      uses: actions/upload-artifact@v1
      with:
        name: godot-linux-appimage
        path: godot-linux-nightly-x86_64.AppImage

  build-editor-windows-cross:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: scripts/build-windows-cross.sh
    - name: Upload windows exe
      uses: actions/upload-artifact@v1
      with:
        name: godot-windows
        path: bin/godot.windows.opt.tools.64.exe

  build-editor-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - run: scripts/build-macos.sh
    - name: Upload macOS dmg
      uses: actions/upload-artifact@v1
      with:
        name: godot-macos
        path: godot-macos-nightly-x86_64.dmg

  build-switch:
    runs-on: ubuntu-latest
    container: devkitpro/devkita64

    steps:
    - uses: actions/checkout@v2
    - run: bash -c 'scripts/build-switch.sh'
    - name: Upload Switch nro
      uses: actions/upload-artifact@v1
      with:
        name: godot-switch
        path: bin/switch_release_debug.nro

  create-release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [build-editor-windows-cross, build-editor-macos, build-editor-linux, build-switch]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: godot-windows
      - uses: actions/download-artifact@v2
        with:
          name: godot-macos
      - uses: actions/download-artifact@v2
        with:
          name: godot-linux
      - uses: actions/download-artifact@v2
        with:
          name: godot-switch
      
      - id: get_version
        name: Get the version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
        shell: bash

      - run: scripts/create-template.sh

      - uses: dsaltares/fetch-gh-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          repo: "Stary2001/godot-forwarder"
          version: "latest"
          file: "godot-forwarder.nro"
      
      - run: scripts/create-switch-release.sh ${{ steps.get_version.outputs.VERSION }}
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          body: |
            Release created by CI for ${{ steps.get_version.outputs.VERSION }}
          draft: true
          prerelease: false
      
      - name: Upload Windows editor
        id: upload-windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./godot.windows.opt.tools.64.exe
          asset_name: godot.windows.opt.tools.64.exe
          asset_content_type: application/octet-stream
      
      - name: Upload macOS editor
        id: upload-macos
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./godot-macos-nightly-x86_64.dmg
          asset_name: godot-macos-nightly-x86_64.dmg
          asset_content_type: application/octet-stream
      
      - name: Upload Linux editor
        id: upload-linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./godot.x11.opt.tools.64
          asset_name: godot.x11.opt.tools.64
          asset_content_type: application/octet-stream
      
      - name: Upload Switch template
        id: upload-switch-template
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./godot_templates_switch_only.tpz
          asset_name: godot_templates_${{ steps.get_version.outputs.VERSION }}_switch_only.tpz
          asset_content_type: application/zip
      
      - name: Upload Switch release
        id: upload-switch-release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./godot-switch.zip
          asset_name: godot-switch-${{ steps.get_version.outputs.VERSION }}.zip
          asset_content_type: application/zip